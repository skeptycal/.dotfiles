
#* Go install options and utilities
# export GOPATH=$HOME/go

#* PATH
# export PATH="\
# $GOPATH/bin:\
# $HOME/bin:\
# /usr/local/bin:\
# /opt/homebrew/opt/python@3.10/Frameworks/Python.framework/Versions/3.10/bin:\
# $PATH"

#* Python 3.10 framework installation

#* Run this to set the appropriate variables. This is a combination of the answers that have already been given here. Put it in your ~/.bash_profile to make it permanent.
#* Reference: https://newbedev.com/how-to-make-python-use-ca-certificates-from-mac-os-truststore
# CERT_PATH=$(python -m certifi)
# export SSL_CERT_FILE=${CERT_PATH}
# export REQUESTS_CA_BUNDLE=${CERT_PATH}

#* If you put the additional certificates in a PEM bundle file you can use these two environment variables to overwrite the default cert stores used by Python openssl and requests.
# SSL_CERT_FILE=/System/Library/OpenSSL/cert.pem
# REQUESTS_CA_BUNDLE=/System/Library/OpenSSL/cert.pem

# upgrade all homebrew packages
# alias brewup='brew list |xargs brew upgrade 2>/dev/null'

# Python helper stuff

# pip search is deprecated ... using alternate scripts from:
# https://github.com/jeffmm/pypi-simple-search
# alias pip="pip-pss"
# alias sba='source ./.venv/bin/activate'
# alias sda='source ./.venv/bin/deactivate'

# list all installed packages (name only, no headers)
    # Several optional ways to accomplish this ...
    # alias piplist="pip list | tail -n +3 | cut -d ' ' -f 1"
    # alias piplist="pip list | sed 1,2d | awk '{print $1}'"
    # alias piplist="pip list | awk 'NR>2 {print $1}'"
# piplist() { pip list | awk 'NR>2 {print $1}'; }

# update all installed packages
# alias pipup="pip list | awk 'NR>2 {print $1}' | xargs pip install -U"
# pipup() { piplist | xargs pip install -U; }

# Homebrew warning message
# export HOMEBREW_NO_INSTALL_CLEANUP=1

# Path to your oh-my-zsh installation.
# export ZSH="/Users/skeptycal/.oh-my-zsh"

#* Aliases
# alias del='rm -rf '

# Set name of the theme to load --- if set to "random", it will
    # load a random theme each time oh-my-zsh is loaded, in which case,
    # to know which specific one was loaded, run: echo $RANDOM_THEME
    # See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
    # ZSH_THEME="robbyrussell"
# ZSH_THEME="robbyrussell"

# Uncomment the following line to display red dots whilst waiting for completion.
    # You can also set it to another string to have that shown instead of the default red dots.
    # e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
    # Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
    # under VCS as dirty. This makes repository status check for large repositories
    # much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load?
    # Standard plugins can be found in $ZSH/plugins/
    # Custom plugins may be added to $ZSH_CUSTOM/plugins/
    # Example format: plugins=(rails git textmate ruby lighthouse)
    # Add wisely, as too many plugins slow down shell startup.
# plugins=(git python golang vscode)

# source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# other oh-my-zsh options ...
# ----------------------------------------------------------------

# Set list of themes to pick from when loading at random
    # Setting this variable when ZSH_THEME=random will cause zsh to load
    # a theme from this variable instead of looking in $ZSH/themes/
    # If set to an empty array, this variable will have no effect.
    # ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
    # Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line if you want to change the command execution time
    # stamp shown in the history command output.
    # You can set one of the optional three formats:
    # "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
    # or set a custom format using the strftime function format specifications,
    # see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Preferred editor for local and remote sessions
    # if [[ -n $SSH_CONNECTION ]]; then
    #   export EDITOR='vim'
    # else
    #   export EDITOR='mvim'
    # fi

# Compilation flags
    # export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
    # plugins, and themes. Aliases can be placed here, though oh-my-zsh
    # users are encouraged to define aliases within the ZSH_CUSTOM folder.
    # For a full list of active aliases, run `alias`.
    #
    # Example aliases
    # alias zshconfig="mate ~/.zshrc"
    # alias ohmyzsh="mate ~/.oh-my-zsh"export PATH="/opt/homebrew/opt/openssl@3/bin:$PATH"
